// 'use client'
// import CountUp from 'react-countup'

// const stats = [
//   { id: 1, label: 'Customers', info: 'enabled to make data-informed decisions', value: 10 },
//   { id: 2, label: 'Reduction', info: 'in infrastructure cost by building in the cloud', value: 40 },
//   { id: 3, label: 'Revenue',info: 'generated by delivering the fit-for-purpose solution', value: 2 },
//   { id: 4, label: 'Hours', info: 'saved during transitioning from data to decisions', value: 96},
// ]

// export default function Stats() {
//   return (
//     <div className="container px-6 py-10 mx-auto text-center">
      // <h2 className="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14">
      //   Career <span className="highlighted-text text-primary-500">milestones</span>
      // </h2>
      // <p className="mt-6 text-lg leading-8 text-gray-500 dark:text-gray-400">
      //   Here's a snapshot of what I have accomplished so far in my data journey.
      // </p>
      // <div className="px-4 py-16 mx-auto sm:max-w-xl md:max-w-full lg:max-w-screen-xl md:px-24 lg:px-8 lg:py-20">
      //   <div className="grid w-full grid-cols-1 lg:grid-cols-4 md:grid-cols-2 gap-y-8">
      //     {stats.map((stat) => (
      //       <div key={stat.id} className="flex flex-col items-center">
      //         <h3 className="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14 hover:-translate-y-1 hover:scale-110 duration-300 ...">
      //           <CountUp
      //             duration={2.75}
      //             end={stat.value}
      //             prefix={stat.label === 'Revenue' ? '$' : ''}
      //             suffix={(() => {
      //               switch (stat.label) {
      //                 case 'Revenue':
      //                   return 'M+'
      //                 case 'Reduction':
      //                   return '%'
      //                 default:
      //                   return '+'
      //               }
      //             })()}
      //           />
      //         </h3>
      //         <h5 className="text-md font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 md:text-2xl md:leading-14">
      //           {stat.label}
      //         </h5>
      //         <p className="text-base font-medium leading-7 text-center text-gray-500 dark:text-gray-400">
      //           {stat.info}
      //         </p>
      //       </div>
      //     ))}
      //   </div>
      // </div>
//     </div>
//   )
// }


import React from 'react';
import CountUp from 'react-countup';
import { useInView } from 'react-intersection-observer';

const stats = [
  { id: 1, label: 'Customers', info: 'enabled to make data-informed decisions', value: 10 },
  { id: 2, label: 'Reduction', info: 'in infrastructure cost by building in the cloud', value: 40 },
  { id: 3, label: 'Revenue', info: 'generated by delivering the fit-for-purpose solution', value: 2 },
  { id: 4, label: 'Hours', info: 'saved during transitioning from data to decisions', value: 96 },
];

export default function Stats() {
  return (
    <div className="container px-6 py-10 mx-auto text-center">
      <h2 className="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14">
        Career <span className="highlighted-text text-primary-500">milestones</span>
      </h2>
      <p className="mt-6 text-lg leading-8 text-gray-500 dark:text-gray-400">
        Here's a snapshot of what I have accomplished so far in my data journey.
      </p>
      <div className="px-4 py-16 mx-auto sm:max-w-xl md:max-w-full lg:max-w-screen-xl md:px-24 lg:px-8 lg:py-20">
        <div className="grid w-full grid-cols-1 lg:grid-cols-4 md:grid-cols-2 gap-y-8">
          {stats.map((stat) => (
            <StatItem key={stat.id} stat={stat} />
          ))}
        </div>
      </div>
    </div>
  );
}

function StatItem({ stat }) {
  const [ref, inView] = useInView({ triggerOnce: false });

  return (
    <div ref={ref} className="flex flex-col items-center" data-stat-id={stat.id}>
      <h3 className="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14 hover:-translate-y-1 hover:scale-110 duration-300 ...">
        {inView ? (
          <CountUp
            duration={2.75}
            end={stat.value}
            prefix={stat.label === 'Revenue' ? '$' : ''}
            suffix={
              stat.label === 'Revenue' ? 'M+' : stat.label === 'Reduction' ? '%' : '+'
            }
          />
        ) : (
          '0' // Start at 0 until it's in view
        )}
      </h3>
      <h5 className="text-md font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 md:text-2xl md:leading-14">
        {stat.label}
      </h5>
      <p className="text-base font-medium leading-7 text-center text-gray-500 dark:text-gray-400">
        {stat.info}
      </p>
    </div>
  );
}
